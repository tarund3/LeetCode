# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        
        

        if not root:
            return []
        
        res = [[root.val]]

        queue = deque([root])

        while len(queue):
            curr_len = len(queue)
            temp = []
            
            for i in range(curr_len):
                node = queue.popleft()
                if node.left:
                    temp.append(node.left.val)
                    queue.append(node.left)
                if node.right:
                    temp.append(node.right.val)
                    queue.append(node.right)
            if temp:
                res.append(temp)
        return res
